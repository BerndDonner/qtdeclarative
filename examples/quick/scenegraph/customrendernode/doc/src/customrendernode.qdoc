// Copyright (C) 2022 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \example scenegraph/customrendernode
    \title Scene Graph - Custom QSGRenderNode
    \ingroup qtquickexamples
    \brief Shows how to use QSGRenderNode to implement custom rendering in the Qt Quick scenegraph.

    The custom render node example shows how to implement an item that is rendered using
    a custom QSGRenderNode.

    \image customrendernode-example.gif

    QSGRenderNode allows direct access to the Render Hardware Interface (RHI)
    within the scenegraph. This example demonstrates how to create QSGRenderNode
    based render node and manage it with a custom item. The render node creates
    an RHI pipeline, updates vertex and uniform buffers, and renders into the
    RHI command buffer.

    In practice this is a portable, cross-platform approach to perform custom
    rendering inline with the scenegraph's own rendering, without resorting to a
    native 3D API such as OpenGL, Metal, or Vulkan. Rather, the application uses
    Qt's graphics and shader abstraction layer.

    \note This example demonstrates advanced, low-level functionality performing
    portable, cross-platform 3D rendering, while relying on APIs with limited
    compatibility guarantee from the Qt Gui module.  To be able to use the QRhi
    APIs, the application links to \c{Qt::GuiPrivate} and includes
    \c{<rhi/qrhi.h>}.

*/
